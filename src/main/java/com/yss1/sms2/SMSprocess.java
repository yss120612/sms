package com.yss1.sms2;

import java.io.IOException;
import jssc.SerialPort;
import jssc.SerialPortEvent;
import jssc.SerialPortEventListener;
import jssc.SerialPortException; 

public class SMSprocess {
	public SMSprocess() throws Exception {
		serialPort = new SerialPort("COM4");
		portReader = new PortReader();
		
	}
	
	
	private SerialPort serialPort;
	private PortReader portReader;

	// –§—É–Ω–∫—Ü–∏—è —Ä–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è –Ω–æ–º–µ—Ä–∞ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
	// –¢–µ–ª–µ—Ñ–æ–Ω –≤ –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ –∏–º–µ–µ—Ç 11 —Å–∏–º–≤–æ–ª–æ–≤ (79231111111)
	// 11-–ù–µ—á—ë—Ç–Ω–æ–µ —á–∏—Å–ª–æ, –ø–æ—ç—Ç–æ–º—É –≤ –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤–ª—è–µ–º F
	// –ò –ø–µ—Ä–µ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–ø–∞—Ä–Ω–æ —Ü–∏—Ñ—Ä—ã –º–µ—Å—Ç–∞–º–∏. –≠—Ç–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç PDU-—Ñ–æ—Ä–º–∞—Ç
	
	public static String reversePhone(String phone) {
		phone=phone.trim().replaceAll("[\\s,\\+,\\-,(,)]+", "").replaceAll("^8","7");
		
		if (phone.length() < 11 || !phone.matches("\\d+")) {
			return "";
		}
		
		phone += "F";
		//if (1==1) return phone;
		String phoneRev = "";
		for (int i = 0; i <= 10; i = i + 2) {
			phoneRev = phoneRev + phone.charAt(i + 1) + phone.charAt(i);
		}
		return phoneRev;
	}

	// –§—É–Ω–∫—Ü–∏—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –°–ú–°-–∫–∏ –≤ USC2 —Ñ–æ—Ä–º–∞—Ç –≤–º–µ—Å—Ç–µ —Å –¥–ª–∏–Ω–æ–π —Å–æ–æ–±—â–µ–Ω–∏—è
	// (–í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ <–¥–ª–∏–Ω–∞ –ø–∞–∫–µ—Ç–∞><–ø–∞–∫–µ—Ç>)
	private static String StringToUSC2(String text) throws IOException {
		String str = "";

		byte[] msgb = text.getBytes("UTF-16");
		// –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è —Å–∞–º–æ–π –°–ú–°
		String msgPacked = "";
		for (int i = 2; i < msgb.length; i++) {
			String b = Integer.toHexString((int) msgb[i]);
			if (b.length() < 2)
				msgPacked += "0";
			msgPacked += b;
		}

		// –î–ª–∏–Ω–∞ –ø–æ–ª—É—á–∏–≤—à–µ–≥–æ—Å—è –ø–∞–∫–µ—Ç–∞ –≤ –Ω—É–∂–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
		String msglenPacked = Integer.toHexString(msgPacked.length() / 2);
		
		// –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ –Ω–µ—á—ë—Ç–Ω–∞—è - –¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ü–µ 0
		if (msglenPacked.length() < 2)
			str += "0";

		// –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ –¥–ª–∏–Ω—ã –∏ —Å–∞–º–æ–≥–æ —Ç–µ–ª–∞ –ø–∞–∫–µ—Ç–∞
		str += msglenPacked;
		str += msgPacked;
		str = str.toUpperCase();
		return str;
	}

	// –ü–æ–ª—É—á–∏—Ç—å –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏—è
	private static int getSMSLength(String sms) {
		return (sms.length() / 2 - 1);
	}

	public void smsRead() throws IOException
	{
		try {
		serialPort.openPort();
		serialPort.addEventListener(portReader);
		
		serialPort.setParams(SerialPort.BAUDRATE_9600, SerialPort.DATABITS_8, SerialPort.STOPBITS_1,SerialPort.PARITY_NONE);
		char c = 0x0D;// –°–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–∞—Ä–µ—Ç–∫–∏ CR
		String cmd ="AT+CMGL=4"+c;
		serialPort.writeString(cmd);
		serialPort.removeEventListener();
		serialPort.closePort();
		} catch (SerialPortException ex) {
			//serialPort.closePort();
			System.out.println(ex);
		}
	}
	
	public boolean smsSend(String sms, String phone) throws IOException {

		// –ü–µ—Ä–µ–¥–∞—ë–º –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∏–º—è –ø–æ—Ä—Ç–∞
		
		try {
			// –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç
			String phoneR=reversePhone(phone);
			if (phoneR.isEmpty())
			{
				return false;
			}
			serialPort.openPort();
			serialPort.addEventListener(portReader);
			// –í—ã—Å—Ç–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
			serialPort.setParams(SerialPort.BAUDRATE_9600, SerialPort.DATABITS_8, SerialPort.STOPBITS_1,SerialPort.PARITY_NONE);
			// serialPort.addEventListener(new PortReader(),
			// SerialPort.MASK_RXCHAR);

			// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
			String message = "0011000B91" + reversePhone(phone) + "0008A7" + StringToUSC2(sms);

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
			char c = 0x0D;// –°–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ –∫–∞—Ä–µ—Ç–∫–∏ CR
			String str = "AT+CMGF=0" + c;
			//REMOVE serialPort.writeString(str);
			Thread.sleep(500); // –ü–æ-–∏–¥–µ–µ, –∑–¥–µ—Å—å –Ω–∞–¥–æ –∂–¥–∞—Ç—å –æ—Ç–≤–µ—Ç –º–æ–¥–µ–º–∞, –Ω–æ –º—ã
								// –æ–≥—Ä–∞–Ω–∏—á–∏–º—Å—è –ø—Ä–æ—Å—Ç–æ –æ–∂–∏–¥–∞–Ω–∏–µ–º –≤ –ø–æ–ª—Å–µ–∫—É–Ω–¥—ã
			// –û—á–∏—Å—Ç–∏–º –ø–æ—Ä—Ç
			serialPort.purgePort(serialPort.PURGE_RXCLEAR | serialPort.PURGE_TXCLEAR);

			str = "AT+CMGS=" + getSMSLength(message) + c;
			//REMOVE  serialPort.writeString(str);
			Thread.sleep(500);
			serialPort.purgePort(serialPort.PURGE_RXCLEAR | serialPort.PURGE_TXCLEAR);

			c = 26;// –°–∏–º–≤–æ–ª CTRL+Z
			//REMOVE serialPort.writeString(message + c);
			Thread.sleep(3000);
			serialPort.removeEventListener();
			serialPort.closePort();
			
			return true;
		} catch (SerialPortException ex) {
			System.out.println(ex);
			return false;
		} catch (InterruptedException e) {
			System.out.println(e);
			return false;
		}

	}

	// –ö–ª–∞—Å—Å —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤. –Ø —Ä–µ—à–∏–ª –æ–±–æ–π—Ç–∏—Å—å –±–µ–∑ –Ω–µ–≥–æ, –Ω–æ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ –∫
	// JSSC –≤—Å—ë –µ—Å—Ç—å üôÇ
	private class PortReader implements SerialPortEventListener {

		public void serialEvent(SerialPortEvent event) {
			if (event.isRXCHAR() && event.getEventValue() > 0) {
				try {
					// –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏ —Ç.–¥.
					String data = serialPort.readString(event.getEventValue());
					// –ò —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
					System.out.println("response: " + data);
				} catch (SerialPortException ex) {
					System.out.println(ex);
				}
			}
		}
	}

}
